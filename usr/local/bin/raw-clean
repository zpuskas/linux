#!/usr/bin/env python
#
# (c) 2017, Zoltan Puskas
# License: BSD 3-clause

import click
import os
import send2trash
import sys

COMP_IMAGE_EXT = ".JPG"


@click.command()
@click.option("--delete", "-d",
              is_flag=True,
              help="Delete files instead of just printing to terminal")
@click.option("--invert", "-i",
              is_flag=True,
              help="Invert logic and clean JPGs based on RAW files")
@click.option("--raw-dir", "-r",
              default="raw",
              help="Directory to look for correspinding raw files for JPG")
@click.option("--trash", "-t",
              is_flag=True,
              help="Move files to trash instead of printing to terminal")
@click.option("--raw-ext", "-x",
              type=click.Choice(['DNG', 'RAF'], case_sensitive=False),
              default="DNG",
              help="RAW file extension type")
def raw_clean(delete, invert, raw_dir, trash, raw_ext):
    """Clean up RAW files without matching JPG files in current directory"""
    raw_image_ext = f".{raw_ext.upper()}"

    # Basic user input check
    if not os.path.exists(raw_dir):
        print(f"No '{raw_dir}' directory found!")
        sys.exit(1)

    # Get list of images in different formats
    image_dir = os.getcwd()
    raw_dir = os.path.abspath(raw_dir)

    jpgs = set(
        [f.split('.')[0]
         for f in os.listdir(image_dir) if f.endswith(COMP_IMAGE_EXT)]
    )
    raws = set(
        [f.split('.')[0]
         for f in os.listdir(raw_dir) if f.endswith(raw_image_ext)]
    )

    # Find missing pairs
    paired = raws & jpgs
    jpgs_without_raw = jpgs - paired
    raws_without_jpg = raws - paired

    # Decide what set of files to process
    if not invert:
        images = raws_without_jpg
        workdir = raw_dir
        ext = raw_image_ext
    else:
        images = jpgs_without_raw
        workdir = image_dir
        ext = COMP_IMAGE_EXT

    # Process files
    for image in images:
        image_path = os.path.join(workdir, f"{image}{ext}")
        if not trash and not delete:
            print(f"No pair found for '{image_path}' ")
        elif delete:
            print(f"Deleting '{image_path}'...")
            os.unlink(image_path)
        elif trash:
            print(f"Trashing '{image_path}'...")
            send2trash.send2trash(image_path)


if __name__ == "__main__":
    raw_clean()
